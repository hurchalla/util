name: CMake

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

  # push:
  #  branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  #another potential flag for CXX_FLAGS is  -DHURCHALLA_AVOID_CSELECT=1
  CXX_FLAGS: '-std=c++11'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      
      #-DCMAKE_CXX_COMPILER=clang++-10
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DTEST_HURCHALLA_LIBS=ON  -DCMAKE_CXX_FLAGS=${{env.CXX_FLAGS}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test (NDEBUG) Programming by Contract
      working-directory: ${{github.workspace}}/build
      run: ./test_ndebug_programming_by_contract
      
    - name: Test Programming by Contract
      working-directory: ${{github.workspace}}/build
      run: ./test_programming_by_contract

    - name: Test utilities
      working-directory: ${{github.workspace}}/build
      run: ./test_hurchalla_util
  
